return {
  enabled = true,
  'dgox16/oldworld.nvim',
  lazy = false,
  priority = 1000,
  config = function()
    require('oldworld').setup {
      styles = {
        booleans = { italic = false },
        comments = { italic = false },
        keywords = { italic = false },
        functions = { italic = false },
        strings = { italic = false },
        variables = { italic = false },
        types = { italic = false },
      },
      highlight_overrides = {
        String = { fg = '#897e96' },
        Identifier = { fg = '#be93c2' },
        Statement = { fg = '#747991' },
        Delimiter = { fg = '#747991' },
        Whitespace = { bg = 'NONE' },
        NonText = { bg = 'NONE' },
        Normal = { bg = 'NONE', fg = '#747991' },
        NormalFloat = { bg = 'NONE' },
        NormalNC = { bg = 'NONE' },
        TabLineFill = { bg = 'NONE' },
        FoldColumn = { bg = 'NONE' },
        Pmenu = { bg = 'NONE' },
        StatusLine = { bg = 'NONE', fg = '#747991' },
        StatusLineTerm = { bg = 'NONE', fg = '#747991' },
        StatusLineNC = { bg = 'NONE' },
        StatusLineTermNC = { bg = 'NONE' },
        SignColumn = { bg = 'NONE' },
        FloatBorder = { bg = 'NONE' },
        FloatTitle = { bg = 'NONE' },
        LineNr = { fg = '#747991' },
        CursorLine = { bg = 'NONE' },
        Visual = { bg = '#e3e4ff' },
        PmenuSel = { bg = '#e3e4ff', fg = '#747991' },
        CmpBorder = { fg = '#3d3d3d' },
        -- blink.cmp transparency
        BlinkCmpMenu = { bg = 'NONE' },
        BlinkCmpMenuBorder = { fg = '#3d3d3d', bg = 'NONE' },
        BlinkCmpMenuSelection = { bg = '#e3e4ff', fg = '#747991' },
        BlinkCmpDoc = { bg = 'NONE' },
        BlinkCmpDocBorder = { fg = '#3d3d3d', bg = 'NONE' },
        BlinkCmpSignatureHelp = { bg = 'NONE' },
        BlinkCmpSignatureHelpBorder = { fg = '#3d3d3d', bg = 'NONE' },
        -- blink.cmp kind icons
        BlinkCmpKindText = { fg = '#747991' },
        BlinkCmpKindMethod = { fg = '#d7c6f7' },
        BlinkCmpKindFunction = { fg = '#d7c6f7' },
        BlinkCmpKindConstructor = { fg = '#e29eca' },
        BlinkCmpKindField = { fg = '#82ffac' },
        BlinkCmpKindVariable = { fg = '#82ffac' },
        BlinkCmpKindClass = { fg = '#ffd700' },
        BlinkCmpKindInterface = { fg = '#ffd700' },
        BlinkCmpKindModule = { fg = '#747991' },
        BlinkCmpKindProperty = { fg = '#82ffac' },
        BlinkCmpKindUnit = { fg = '#747991' },
        BlinkCmpKindValue = { fg = '#e29eca' },
        BlinkCmpKindEnum = { fg = '#ffd700' },
        BlinkCmpKindKeyword = { fg = '#e29eca' },
        BlinkCmpKindSnippet = { fg = '#82ffac' },
        BlinkCmpKindColor = { fg = '#e29eca' },
        BlinkCmpKindFile = { fg = '#747991' },
        BlinkCmpKindReference = { fg = '#747991' },
        BlinkCmpKindFolder = { fg = '#747991' },
        BlinkCmpKindEnumMember = { fg = '#82ffac' },
        BlinkCmpKindConstant = { fg = '#e29eca' },
        BlinkCmpKindStruct = { fg = '#ffd700' },
        BlinkCmpKindEvent = { fg = '#e29eca' },
        BlinkCmpKindOperator = { fg = '#747991' },
        BlinkCmpKindTypeParameter = { fg = '#ffd700' },
        Comment = { fg = '#989898', italic = false },
        Type = { fg = '#747991', italic = false },
        Folded = { fg = '#747991' },
        -- DAP
        DapBreakpoint = { fg = '#f79292' },
        DapBreakpointGreen = { fg = '#82ffac' },
        DapBreakpointYellow = { fg = '#ffd700' },
        DapBreakpointRejected = { fg = '#ff9ea8' },
        DapLogPoint = { fg = '#82ffac' },
        DapStopped = { fg = '#82ffac', bg = '#214283' },
        -- Diagnostics
        DiagnosticVirtualTextError = { fg = '#ff9ea8' },
        DiagnosticUnnecessary = { undercurl = true, fg = '#989898' },
        DiagnosticSignHint = { fg = '#747991' },
        -- Mode and UI
        ModeMsg = { bg = 'NONE', fg = '#747991' },
        DapUIPlayPauseNC = { bg = 'NONE' },
        DapUIRestartNC = { bg = 'NONE' },
        DapUIUnavailableNC = { bg = 'NONE', fg = '#747991' },
        DapUIStopNC = { bg = 'NONE' },
        DapUIStepOverNC = { bg = 'NONE' },
        DapUIStepIntoNC = { bg = 'NONE' },
        DapUIStepBackNC = { bg = 'NONE' },
        DapUIStepOutNC = { bg = 'NONE' },
        -- Flash
        FlashLabel = { bg = '#fff3cc' },
        Search = { bg = '#fff3cc' },
        Substitute = { bg = '#fff3cc' },
        -- Mini
        MiniStatusLineModeInsert = { bg = '#d7c6f7', fg = '#000000' },
        MiniFilesFile = { fg = '#827182' },
        MiniFilesDirectory = { fg = '#7677b7' },
        -- Syntax
        ['@boolean'] = { fg = '#e29eca', italic = true },
        ['@tag.attribute'] = { fg = '#aaa4e5' },
        ['@namespace'] = { fg = '#747991' },
        ['@property'] = { fg = '#747991' },
        ['@variable'] = { fg = '#747991' },
        ['@parameter'] = { fg = '#747991' },
        -- Snippet
        SnippetTabStop = { bg = 'NONE' },
        -- Winbar
        WinBar = { bg = 'NONE', fg = '#747991' },
        WinBarNC = { bg = 'NONE' },
        -- LSP
        ['@lsp.typemod.variable.declaration'] = { fg = '#747991' },
        ['@lsp.typemod.property'] = { fg = '#747991' },
        -- Dart
        ['@lsp.type.class.dart'] = { fg = '#e29eca', bold = true },
        ['@lsp.mod.constructor.dart'] = { fg = '#747991' },
        ['@lsp.typemod.parameter.label.dart'] = { fg = '#e29eca' },
        -- CS
        ['@lsp.type.namespace.cs'] = { fg = '#E8879D' },
        ['@lsp.type.interface.cs'] = { fg = '#C799B6' },
        -- Java
        ['@lsp.typemod.class.public.java'] = { fg = '#54d6a2', bold = true },
        -- Render Markdown
        RenderMarkdownH1Bg = { bg = '#fce4ec', fg = '#c2185b' },
        RenderMarkdownH2Bg = { bg = '#f3e5f5', fg = '#7b1fa2' },
        RenderMarkdownH3Bg = { bg = '#e8eaf6', fg = '#3f51b5' },
        RenderMarkdownH4Bg = { bg = '#e0f2f1', fg = '#00796b' },
        RenderMarkdownH5Bg = { bg = '#fff3e0', fg = '#e65100' },
        RenderMarkdownH6Bg = { bg = '#f1f8e9', fg = '#558b2f' },
        RenderMarkdownH1 = { fg = '#c2185b', bold = true },
        RenderMarkdownH2 = { fg = '#7b1fa2', bold = true },
        RenderMarkdownH3 = { fg = '#3f51b5', bold = true },
        RenderMarkdownH4 = { fg = '#00796b', bold = true },
        RenderMarkdownH5 = { fg = '#e65100', bold = true },
        RenderMarkdownH6 = { fg = '#558b2f', bold = true },
        -- Render Markdown Markup (Treesitter)
        RenderMarkdownCode = { bg = '#f5f5f5' },
        RenderMarkdownCodeInline = { bg = '#f5f5f5', fg = '#747991' },
        -- Markup
        ['@markup.raw.block'] = { bg = '#f5f5f5', fg = '#747991' },
        ['@markup.raw.inline'] = { bg = '#f5f5f5', fg = '#747991' },
        ['@markup.raw'] = { bg = '#f5f5f5', fg = '#747991' },
        ['@markup.emphasis'] = { fg = '#e29eca', italic = true },
        ['@markup.strong'] = { fg = '#747991', bold = true },
        ['@markup.italic'] = { fg = '#e29eca', italic = true },
        ['@markup.link'] = { fg = '#3f51b5', underline = true },
        ['@markup.link.url'] = { fg = '#3f51b5', underline = true },
        ['@markup.link.label'] = { fg = '#3f51b5' },
        ['@markup.list'] = { fg = '#747991' },
        ['@markup.list.checked'] = { fg = '#82ffac' },
        ['@markup.list.unchecked'] = { fg = '#747991' },
        ['@markup.heading'] = { fg = '#747991', bold = true },
        ['@markup.quote'] = { fg = '#989898', italic = true },
      },
    }
    vim.cmd.colorscheme 'oldworld'
  end,
}
